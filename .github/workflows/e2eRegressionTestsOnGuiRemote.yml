name: E2E Regression Tests On Gui Remotely

on:
  workflow_dispatch:

jobs:
  Chrome_Ubuntu_Test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0     

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Set up MySQL Server with Docker Containers
        run: docker run --name dockerDB -p 3306:3306 -e MYSQL_ROOT_PASSWORD=yehia -d mysql && \sleep 10 && \docker cp src/test/resources/DBFiles/ProductsAndUsers.sql dockerDB:/ProductsAndUsers.sql && \docker exec -i dockerDB mysql -u root -p'yehia' -e "SOURCE /ProductsAndUsers.sql;"

      - name: Set up Selenium Grid with Docker Containers
        run: docker compose -f src/main/resources/docker-compose-v3.yml up --scale chrome=2 --scale edge=0 --scale firefox=0 -d

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec dockerDB mysql -u root -pyehia -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done
    
      - name: Check Running Containers
        run: docker ps
        
      - name: Run tests
        run: mvn clean test -Dtest="CheckoutTests.CheckoutProductOnGUI" -DexecutionType="Remote" -DbrowserType="Chrome" -DisHeadless="true" -DsyncWithDB="true"
        
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Chrome_Linux_Allure
          path: "allure-report/*_AllureReport.html"

      - name: Publish Test Results
        continue-on-error: true
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Tests Results Chrome_Linux"
          files: |
            target/surefire-reports/TEST-*.xml

      - name: Cleanup Docker Containers
        if: always()
        run: |
          docker compose -f src/main/resources/docker-compose-v3.yml down && docker stop dockerDB

  Edge_Ubuntu_Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Set up MySQL Server with Docker Containers
        run: docker run --name dockerDB -p 3306:3306 -e MYSQL_ROOT_PASSWORD=yehia -d mysql && \sleep 10 && \docker cp src/test/resources/DBFiles/ProductsAndUsers.sql dockerDB:/ProductsAndUsers.sql && \docker exec -i dockerDB mysql -u root -p'yehia' -e "SOURCE /ProductsAndUsers.sql;"

      - name: Set up Selenium Grid with Docker Containers
        run: docker compose -f src/main/resources/docker-compose-v3.yml up --scale chrome=0 --scale edge=2 --scale firefox=0 -d

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec dockerDB mysql -u root -pyehia -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Check Running Containers
        run: docker ps

      - name: Run tests
        run: mvn clean test -Dtest="AddToCartTests.AddToCartWithSearchOnGUI" -DexecutionType="Remote" -DbrowserType="Edge" -DisHeadless="true" -DsyncWithDB="true"

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Edge_Linux_Allure
          path: "allure-report/*_AllureReport.html"

      - name: Publish Test Results
        continue-on-error: true
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Tests Results Edge_Linux"
          files: |
            target/surefire-reports/TEST-*.xml

      - name: Cleanup Docker Containers
        if: always()
        run: |
          docker compose -f src/main/resources/docker-compose-v3.yml down && docker stop dockerDB

  Firefox_Ubuntu_Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Set up MySQL Server with Docker Containers
        run: docker run --name dockerDB -p 3306:3306 -e MYSQL_ROOT_PASSWORD=yehia -d mysql && \sleep 10 && \docker cp src/test/resources/DBFiles/ProductsAndUsers.sql dockerDB:/ProductsAndUsers.sql && \docker exec -i dockerDB mysql -u root -p'yehia' -e "SOURCE /ProductsAndUsers.sql;"

      - name: Set up Selenium Grid with Docker Containers
        run: docker compose -f src/main/resources/docker-compose-v3.yml up --scale chrome=0 --scale edge=0 --scale firefox=2 -d

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec dockerDB mysql -u root -pyehia -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Check Running Containers
        run: docker ps

      - name: Run tests
        run: mvn clean test -Dtest="ContactUsTests.SubmitContactUsRequest" -DexecutionType="Remote" -DbrowserType="Firefox" -DisHeadless="true" -DsyncWithDB="true"

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Firefox_Linux_Allure
          path: "allure-report/*_AllureReport.html"

      - name: Publish Test Results
        continue-on-error: true
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Tests Results Firefox_Linux"
          files: |
            target/surefire-reports/TEST-*.xml

      - name: Cleanup Docker Containers
        if: always()
        run: |
          docker compose -f src/main/resources/docker-compose-v3.yml down && docker stop dockerDB

  Chrome_Windows_Test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Run tests
        run: mvn clean test -Dtest="CheckoutTests.CheckoutProductOnAPI" -DexecutionType="Local" -DbrowserType="Chrome" -DsyncWithDB="false" -DisHeadless="true"

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Chrome_Windows_Allure
          path: "allure-report/*_AllureReport.html"

      - name: Publish Test Results
        continue-on-error: true
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Tests Results Chrome_Windows"
          files: |
            target/surefire-reports/TEST-*.xml

      - name: List Surefire reports directory
        run: |
          echo "Listing contents of the Surefire reports directory:"
          ls -l target/*

      - name: Upload Surefire reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/*

  Edge_Windows_Test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Run tests
        run: mvn clean test -Dtest="AddToCartTests.AddToCartWithSearchOnAPI" -DexecutionType="Local" -DsyncWithDB="false" -DbrowserType="Edge" -DisHeadless="true"

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Edge_Windows_Allure
          path: "allure-report/*_AllureReport.html"

      - name: Publish Test Results
        continue-on-error: true
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Tests Results Edge_Windows"
          files: |
            target/surefire-reports/TEST-*.xml

      - name: List Surefire reports directory
        run: |
          echo "Listing contents of the Surefire reports directory:"
          ls -l target/*

      - name: Upload Surefire reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/*

  Firefox_Windows_Test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Run tests
        run: mvn clean test -Dtest="SearchProductTests.SearchForProductOnAPI" -DexecutionType="Local" -DsyncWithDB="false" -DbrowserType="Firefox" -DisHeadless="true"

      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Firefox_Windows_Allure
          path: "allure-report/*_AllureReport.html"

      - name: Publish Test Results
        continue-on-error: true
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          check_name: "Tests Results Firefox_Windows"
          files: |
            target/surefire-reports/TEST-*.xml

      - name: List Surefire reports directory
        run: |
          echo "Listing contents of the Surefire reports directory:"
          ls -l target/*

      - name: Upload Surefire reports
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/*