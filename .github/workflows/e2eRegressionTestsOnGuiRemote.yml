name: E2E Regression Tests On Gui Remotely

on:
  workflow_dispatch:

jobs:
  Chrome_Ubuntu_Test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0     

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Set up MySQL Server with Docker Containers
        run: docker run --name dockerDB -p 3306:3306 -e MYSQL_ROOT_PASSWORD=yehia -d mysql && \sleep 10 && \docker cp src/test/resources/DBFiles/ProductsAndUsers.sql dockerDB:/ProductsAndUsers.sql && \docker exec -i dockerDB mysql -u root -p'yehia' -e "SOURCE /ProductsAndUsers.sql;"

      - name: Set up Selenium Grid with Docker Containers
        run: docker compose -f src/main/resources/docker-compose-v3.yml up --scale chrome=2 --scale edge=0 --scale firefox=0 -d

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec dockerDB mysql -u root -pyehia -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done
    
      - name: Check Running Containers
        run: docker ps
        
      - name: Run tests
        run: mvn clean test -Dtest="CheckoutTests.CheckoutProductOnGUI" -DexecutionType="Remote" -DbrowserType="Chrome" -DisHeadless="true" -DsyncWithDB="true" -D"allure.results.directory"="target/allure-results"
        
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-chrome_ubuntu
          path: target/allure-results

      - name: Cleanup Docker Containers
        if: always()
        run: |
          docker compose -f src/main/resources/docker-compose-v3.yml down && docker stop dockerDB

  Edge_Ubuntu_Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Set up MySQL Server with Docker Containers
        run: docker run --name dockerDB -p 3306:3306 -e MYSQL_ROOT_PASSWORD=yehia -d mysql && \sleep 10 && \docker cp src/test/resources/DBFiles/ProductsAndUsers.sql dockerDB:/ProductsAndUsers.sql && \docker exec -i dockerDB mysql -u root -p'yehia' -e "SOURCE /ProductsAndUsers.sql;"

      - name: Set up Selenium Grid with Docker Containers
        run: docker compose -f src/main/resources/docker-compose-v3.yml up --scale chrome=0 --scale edge=2 --scale firefox=0 -d

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec dockerDB mysql -u root -pyehia -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Check Running Containers
        run: docker ps

      - name: Run tests
        run: mvn clean test -Dtest="AddToCartTests.AddToCartWithSearchOnGUI" -DexecutionType="Remote" -DbrowserType="Edge" -DisHeadless="true" -DsyncWithDB="true" -D"allure.results.directory"="target/allure-results"

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-edge_ubuntu
          path: target/allure-results

      - name: Cleanup Docker Containers
        if: always()
        run: |
          docker compose -f src/main/resources/docker-compose-v3.yml down && docker stop dockerDB

  Firefox_Ubuntu_Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Set up MySQL Server with Docker Containers
        run: docker run --name dockerDB -p 3306:3306 -e MYSQL_ROOT_PASSWORD=yehia -d mysql && \sleep 10 && \docker cp src/test/resources/DBFiles/ProductsAndUsers.sql dockerDB:/ProductsAndUsers.sql && \docker exec -i dockerDB mysql -u root -p'yehia' -e "SOURCE /ProductsAndUsers.sql;"

      - name: Set up Selenium Grid with Docker Containers
        run: docker compose -f src/main/resources/docker-compose-v3.yml up --scale chrome=0 --scale edge=0 --scale firefox=2 -d

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if docker exec dockerDB mysql -u root -pyehia -e "SELECT 1;" >/dev/null 2>&1; then
              echo "MySQL is up!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 1
          done

      - name: Check Running Containers
        run: docker ps

      - name: Run tests
        run: mvn clean test -Dtest="ContactUsTests.SubmitContactUsRequest" -DexecutionType="Remote" -DbrowserType="Firefox" -DisHeadless="true" -DsyncWithDB="true" -D"allure.results.directory"="target/allure-results"

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-firefox_ubuntu
          path: target/allure-results

      - name: Cleanup Docker Containers
        if: always()
        run: |
          docker compose -f src/main/resources/docker-compose-v3.yml down && docker stop dockerDB

  Chrome_Windows_Test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Run tests
        run: mvn clean test -Dtest="CheckoutTests.CheckoutProductOnAPI" -DexecutionType="Local" -DbrowserType="Chrome" -DsyncWithDB="false" -DisHeadless="true" -D"allure.results.directory"="target/allure-results"

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-chrome_windows
          path: target/allure-results

  Edge_Windows_Test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Run tests
        run: mvn clean test -Dtest="AddToCartTests.AddToCartWithSearchOnAPI" -DexecutionType="Local" -DsyncWithDB="false" -DbrowserType="Edge" -DisHeadless="true" -D"allure.results.directory"="target/allure-results"

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-edge_windows
          path: target/allure-results

  Firefox_Windows_Test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.4

      - name: Run tests
        run: mvn clean test -Dtest="SearchProductTests.SearchForProductOnAPI" -DexecutionType="Local" -DsyncWithDB="false" -DbrowserType="Firefox" -DisHeadless="true" -D"allure.results.directory"="target/allure-results"

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-firefox_windows
          path: target/allure-results

  Combine_Allure_Reports:
    runs-on: ubuntu-latest
    needs: [Chrome_Ubuntu_Test,Edge_Ubuntu_Test,Firefox_Ubuntu_Test,Chrome_Windows_Test,Edge_Windows_Test,Firefox_Windows_Test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Install Allure
        run: |
          # Download and unzip Allure
          curl -o allure.zip -L "https://github.com/allure-framework/allure2/releases/latest/download/allure-2.30.0.zip"
          unzip allure.zip
          sudo mv allure-2.30.0 /opt/allure  # Move the whole directory
          echo "/opt/allure/bin" >> $GITHUB_PATH  # Add Allure to the PATH

      - name: Download Allure results from Chrome Ubuntu
        uses: actions/download-artifact@v4
        with:
          name: allure-results-chrome_ubuntu
          path: ./allure-results-chrome_ubuntu

      - name: Download Allure results from Edge Ubuntu
        uses: actions/download-artifact@v4
        with:
          name: allure-results-edge_ubuntu
          path: ./allure-results-edge_ubuntu

      - name: Download Allure results from Firefox Ubuntu
        uses: actions/download-artifact@v4
        with:
          name: allure-results-firefox_ubuntu
          path: ./allure-results-firefox_ubuntu

      - name: Download Allure results from Chrome Windows
        uses: actions/download-artifact@v4
        with:
          name: allure-results-chrome_windows
          path: ./allure-results-chrome_windows

      - name: Download Allure results from Edge Windows
        uses: actions/download-artifact@v4
        with:
          name: allure-results-edge_windows
          path: ./allure-results-edge_windows

      - name: Download Allure results from Firefox Windows
        uses: actions/download-artifact@v4
        with:
          name: allure-results-firefox_windows
          path: ./allure-results-firefox_windows

      - name: Combine Allure results
        run: |
          mkdir -p ./allure-results
          cp -r ./allure-results-chrome_ubuntu/* ./allure-results/
          cp -r ./allure-results-edge_ubuntu/* ./allure-results/
          cp -r ./allure-results-firefox_ubuntu/* ./allure-results/
          cp -r ./allure-results-chrome_windows/* ./allure-results/          
          cp -r ./allure-results-edge_windows/* ./allure-results/
          cp -r ./allure-results-firefox_windows/* ./allure-results/          

      - name: Generate Allure report
        run: allure generate ./allure-results --clean -o ./allure-report

      - name: Copy patch file to allure-maven-plugin folder
        run: cp src/main/resources/allow-file-access_open-report_chrome_windows.bat ./allure-report

      - name: Upload Combined Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: Combined_Allure_Report
          path: ./allure-report